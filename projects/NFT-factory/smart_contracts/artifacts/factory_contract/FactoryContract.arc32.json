{
    "hints": {
        "onCreate()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "mint_NFT(string,string,byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "own_NFT(uint64,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_totalMinted()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxIDIKICAgIGJ5dGVjYmxvY2sgInRvdGFsTWludGVkIiAweDE1MWY3Yzc1ICJjcmVhdG9yIgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNi0xNwogICAgLy8gQGNvbnRyYWN0KHsgc3RhdGVUb3RhbHM6IHsgZ2xvYmFsVWludHM6IDMyLCBnbG9iYWxCeXRlczogMzIgfSB9KQogICAgLy8gZXhwb3J0IGNsYXNzIEZhY3RvcnlDb250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHB1c2hieXRlc3MgMHg5ZmY1NWQ4MiAweDgwNjY0ZmFjIDB4ZDM1ZTI0M2YgMHg0MGRiYjI2YyAvLyBtZXRob2QgIm9uQ3JlYXRlKCl2b2lkIiwgbWV0aG9kICJtaW50X05GVChzdHJpbmcsc3RyaW5nLGJ5dGVbXSl1aW50NjQiLCBtZXRob2QgIm93bl9ORlQodWludDY0LHN0cmluZyl2b2lkIiwgbWV0aG9kICJnZXRfdG90YWxNaW50ZWQoKXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fb25DcmVhdGVfcm91dGVAMyBtYWluX21pbnRfTkZUX3JvdXRlQDQgbWFpbl9vd25fTkZUX3JvdXRlQDUgbWFpbl9nZXRfdG90YWxNaW50ZWRfcm91dGVANgoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNi0xNwogICAgLy8gQGNvbnRyYWN0KHsgc3RhdGVUb3RhbHM6IHsgZ2xvYmFsVWludHM6IDMyLCBnbG9iYWxCeXRlczogMzIgfSB9KQogICAgLy8gZXhwb3J0IGNsYXNzIEZhY3RvcnlDb250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICByZXR1cm4KCm1haW5fZ2V0X3RvdGFsTWludGVkX3JvdXRlQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjY2CiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBnZXRfdG90YWxNaW50ZWQKICAgIGl0b2IKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fb3duX05GVF9yb3V0ZUA1OgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo1MwogICAgLy8gcHVibGljIG93bl9ORlQoYXNzZXRJZDogdWludDY0LCBuYW1lOiBzdHJpbmcpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNi0xNwogICAgLy8gQGNvbnRyYWN0KHsgc3RhdGVUb3RhbHM6IHsgZ2xvYmFsVWludHM6IDMyLCBnbG9iYWxCeXRlczogMzIgfSB9KQogICAgLy8gZXhwb3J0IGNsYXNzIEZhY3RvcnlDb250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBwdXNoaW50IDggLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC51aW50NjQKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGR1cAogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2IC8vIG9uIGVycm9yOiBpbnZhbGlkIGFycmF5IGxlbmd0aCBoZWFkZXIKICAgIGludGNfMiAvLyAyCiAgICArCiAgICBkaWcgMQogICAgbGVuCiAgICA9PQogICAgYXNzZXJ0IC8vIGludmFsaWQgbnVtYmVyIG9mIGJ5dGVzIGZvciBhcmM0LmR5bmFtaWNfYXJyYXk8YXJjNC51aW50OD4KICAgIGV4dHJhY3QgMiAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjUzCiAgICAvLyBwdWJsaWMgb3duX05GVChhc3NldElkOiB1aW50NjQsIG5hbWU6IHN0cmluZykgewogICAgY2FsbHN1YiBvd25fTkZUCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX21pbnRfTkZUX3JvdXRlQDQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjI3CiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNi0xNwogICAgLy8gQGNvbnRyYWN0KHsgc3RhdGVUb3RhbHM6IHsgZ2xvYmFsVWludHM6IDMyLCBnbG9iYWxCeXRlczogMzIgfSB9KQogICAgLy8gZXhwb3J0IGNsYXNzIEZhY3RvcnlDb250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2IC8vIG9uIGVycm9yOiBpbnZhbGlkIGFycmF5IGxlbmd0aCBoZWFkZXIKICAgIGludGNfMiAvLyAyCiAgICArCiAgICBkaWcgMQogICAgbGVuCiAgICA9PQogICAgYXNzZXJ0IC8vIGludmFsaWQgbnVtYmVyIG9mIGJ5dGVzIGZvciBhcmM0LmR5bmFtaWNfYXJyYXk8YXJjNC51aW50OD4KICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBkdXAKICAgIGludGNfMCAvLyAwCiAgICBleHRyYWN0X3VpbnQxNiAvLyBvbiBlcnJvcjogaW52YWxpZCBhcnJheSBsZW5ndGggaGVhZGVyCiAgICBpbnRjXzIgLy8gMgogICAgKwogICAgZGlnIDEKICAgIGxlbgogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC5keW5hbWljX2FycmF5PGFyYzQudWludDg+CiAgICBleHRyYWN0IDIgMAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwogICAgZHVwCiAgICBpbnRjXzAgLy8gMAogICAgZXh0cmFjdF91aW50MTYgLy8gb24gZXJyb3I6IGludmFsaWQgYXJyYXkgbGVuZ3RoIGhlYWRlcgogICAgaW50Y18yIC8vIDIKICAgICsKICAgIGRpZyAxCiAgICBsZW4KICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIGFyYzQuZHluYW1pY19hcnJheTxhcmM0LnVpbnQ4PgogICAgZXh0cmFjdCAyIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjcKICAgIC8vIEBhYmltZXRob2QoKQogICAgY2FsbHN1YiBtaW50X05GVAogICAgaXRvYgogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9vbkNyZWF0ZV9yb3V0ZUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoyMgogICAgLy8gQGFiaW1ldGhvZCh7IG9uQ3JlYXRlOiAncmVxdWlyZScgfSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBjYWxsc3ViIG9uQ3JlYXRlCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo6RmFjdG9yeUNvbnRyYWN0Lm9uQ3JlYXRlKCkgLT4gdm9pZDoKb25DcmVhdGU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjE4CiAgICAvLyBwdWJsaWMgY3JlYXRvciA9IEdsb2JhbFN0YXRlPEFjY291bnQ+KHsga2V5OiAnY3JlYXRvcicgfSkKICAgIGJ5dGVjXzIgLy8gImNyZWF0b3IiCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjI0CiAgICAvLyB0aGlzLmNyZWF0b3IudmFsdWUgPSBUeG4uc2VuZGVyCiAgICB0eG4gU2VuZGVyCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoyMAogICAgLy8gcHVibGljIHRvdGFsTWludGVkID0gR2xvYmFsU3RhdGU8dWludDY0PigpCiAgICBieXRlY18wIC8vICJ0b3RhbE1pbnRlZCIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjUKICAgIC8vIHRoaXMudG90YWxNaW50ZWQudmFsdWUgPSBVaW50NjQoMCkKICAgIGludGNfMCAvLyAwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo6RmFjdG9yeUNvbnRyYWN0Lm1pbnRfTkZUKG5hbWU6IGJ5dGVzLCB1cmw6IGJ5dGVzLCBtZXRhZGF0YTogYnl0ZXMpIC0+IHVpbnQ2NDoKbWludF9ORlQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjI3LTI4CiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIC8vIHB1YmxpYyBtaW50X05GVChuYW1lOiBzdHJpbmcsIHVybDogc3RyaW5nLCBtZXRhZGF0YTogYnl0ZXMpIHsKICAgIHByb3RvIDMgMQogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czoyOQogICAgLy8gYXNzZXJ0KFR4bi5zZW5kZXIgPT09IHRoaXMuY3JlYXRvci52YWx1ZSwgJ05vbiBhdXRvcml6emF0bycpCiAgICB0eG4gU2VuZGVyCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjE4CiAgICAvLyBwdWJsaWMgY3JlYXRvciA9IEdsb2JhbFN0YXRlPEFjY291bnQ+KHsga2V5OiAnY3JlYXRvcicgfSkKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18yIC8vICJjcmVhdG9yIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjkKICAgIC8vIGFzc2VydChUeG4uc2VuZGVyID09PSB0aGlzLmNyZWF0b3IudmFsdWUsICdOb24gYXV0b3JpenphdG8nKQogICAgPT0KICAgIGFzc2VydCAvLyBOb24gYXV0b3JpenphdG8KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzEtNDUKICAgIC8vIGNvbnN0IGl0eG5fcmVzdWx0ID0gaXR4bgogICAgLy8gICAuYXNzZXRDb25maWcoewogICAgLy8gICAgIHRvdGFsOiAxLAogICAgLy8gICAgIGRlY2ltYWxzOiAwLAogICAgLy8gICAgIHVuaXROYW1lOiAnTkZUJywKICAgIC8vICAgICBhc3NldE5hbWU6IG5hbWUsCiAgICAvLyAgICAgdXJsOiB1cmwsCiAgICAvLyAgICAgbWV0YWRhdGFIYXNoOiBtZXRhZGF0YSwKICAgIC8vICAgICBtYW5hZ2VyOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICByZXNlcnZlOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBmcmVlemU6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIGNsYXdiYWNrOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICAvLyAgIC5zdWJtaXQoKQogICAgaXR4bl9iZWdpbgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czozOQogICAgLy8gbWFuYWdlcjogR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MsCiAgICBnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo0MC00MgogICAgLy8gcmVzZXJ2ZTogR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MsCiAgICAvLyBmcmVlemU6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gY2xhd2JhY2s6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgZHVwbiAzCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0Q2xhd2JhY2sKICAgIGl0eG5fZmllbGQgQ29uZmlnQXNzZXRGcmVlemUKICAgIGl0eG5fZmllbGQgQ29uZmlnQXNzZXRSZXNlcnZlCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TWFuYWdlcgogICAgZnJhbWVfZGlnIC0xCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0eG5fZmllbGQgQ29uZmlnQXNzZXRVUkwKICAgIGZyYW1lX2RpZyAtMwogICAgaXR4bl9maWVsZCBDb25maWdBc3NldE5hbWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzUKICAgIC8vIHVuaXROYW1lOiAnTkZUJywKICAgIHB1c2hieXRlcyAiTkZUIgogICAgaXR4bl9maWVsZCBDb25maWdBc3NldFVuaXROYW1lCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBkZWNpbWFsczogMCwKICAgIGludGNfMCAvLyAwCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzMKICAgIC8vIHRvdGFsOiAxLAogICAgaW50Y18xIC8vIDEKICAgIGl0eG5fZmllbGQgQ29uZmlnQXNzZXRUb3RhbAogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czozMS00NAogICAgLy8gY29uc3QgaXR4bl9yZXN1bHQgPSBpdHhuCiAgICAvLyAgIC5hc3NldENvbmZpZyh7CiAgICAvLyAgICAgdG90YWw6IDEsCiAgICAvLyAgICAgZGVjaW1hbHM6IDAsCiAgICAvLyAgICAgdW5pdE5hbWU6ICdORlQnLAogICAgLy8gICAgIGFzc2V0TmFtZTogbmFtZSwKICAgIC8vICAgICB1cmw6IHVybCwKICAgIC8vICAgICBtZXRhZGF0YUhhc2g6IG1ldGFkYXRhLAogICAgLy8gICAgIG1hbmFnZXI6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIHJlc2VydmU6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIGZyZWV6ZTogR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MsCiAgICAvLyAgICAgY2xhd2JhY2s6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIHB1c2hpbnQgMyAvLyAzCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQzCiAgICAvLyBmZWU6IDAsCiAgICBpbnRjXzAgLy8gMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzEtNDUKICAgIC8vIGNvbnN0IGl0eG5fcmVzdWx0ID0gaXR4bgogICAgLy8gICAuYXNzZXRDb25maWcoewogICAgLy8gICAgIHRvdGFsOiAxLAogICAgLy8gICAgIGRlY2ltYWxzOiAwLAogICAgLy8gICAgIHVuaXROYW1lOiAnTkZUJywKICAgIC8vICAgICBhc3NldE5hbWU6IG5hbWUsCiAgICAvLyAgICAgdXJsOiB1cmwsCiAgICAvLyAgICAgbWV0YWRhdGFIYXNoOiBtZXRhZGF0YSwKICAgIC8vICAgICBtYW5hZ2VyOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICByZXNlcnZlOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBmcmVlemU6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIGNsYXdiYWNrOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICAvLyAgIC5zdWJtaXQoKQogICAgaXR4bl9zdWJtaXQKICAgIGl0eG4gQ3JlYXRlZEFzc2V0SUQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjAKICAgIC8vIHB1YmxpYyB0b3RhbE1pbnRlZCA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gInRvdGFsTWludGVkIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NDgKICAgIC8vIHRoaXMudG90YWxNaW50ZWQudmFsdWUgPSB0b3RhbCArIFVpbnQ2NCgxKQogICAgaW50Y18xIC8vIDEKICAgICsKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjAKICAgIC8vIHB1YmxpYyB0b3RhbE1pbnRlZCA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgYnl0ZWNfMCAvLyAidG90YWxNaW50ZWQiCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQ4CiAgICAvLyB0aGlzLnRvdGFsTWludGVkLnZhbHVlID0gdG90YWwgKyBVaW50NjQoMSkKICAgIHN3YXAKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQ5CiAgICAvLyBHbG9iYWxTdGF0ZTx1aW50NjQ+KHsga2V5OiBuYW1lIH0pLnZhbHVlID0gaXR4bl9yZXN1bHQuY3JlYXRlZEFzc2V0LmlkCiAgICBmcmFtZV9kaWcgLTMKICAgIGRpZyAxCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo1MAogICAgLy8gcmV0dXJuIGl0eG5fcmVzdWx0LmNyZWF0ZWRBc3NldC5pZAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo6RmFjdG9yeUNvbnRyYWN0Lm93bl9ORlQoYXNzZXRJZDogdWludDY0LCBuYW1lOiBieXRlcykgLT4gdm9pZDoKb3duX05GVDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NTMKICAgIC8vIHB1YmxpYyBvd25fTkZUKGFzc2V0SWQ6IHVpbnQ2NCwgbmFtZTogc3RyaW5nKSB7CiAgICBwcm90byAyIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NTQtNjEKICAgIC8vIGl0eG4KICAgIC8vICAgLmFzc2V0VHJhbnNmZXIoewogICAgLy8gICAgIHhmZXJBc3NldDogYXNzZXRJZCwKICAgIC8vICAgICBhc3NldFJlY2VpdmVyOiBUeG4uc2VuZGVyLAogICAgLy8gICAgIGFzc2V0QW1vdW50OiAxLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIC8vICAgLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjU3CiAgICAvLyBhc3NldFJlY2VpdmVyOiBUeG4uc2VuZGVyLAogICAgdHhuIFNlbmRlcgogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo1OAogICAgLy8gYXNzZXRBbW91bnQ6IDEsCiAgICBpbnRjXzEgLy8gMQogICAgaXR4bl9maWVsZCBBc3NldEFtb3VudAogICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjU0LTYwCiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICB4ZmVyQXNzZXQ6IGFzc2V0SWQsCiAgICAvLyAgICAgYXNzZXRSZWNlaXZlcjogVHhuLnNlbmRlciwKICAgIC8vICAgICBhc3NldEFtb3VudDogMSwKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICBwdXNoaW50IDQgLy8gNAogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgLy8gc21hcnRfY29udHJhY3RzL2ZhY3RvcnlfY29udHJhY3QvY29udHJhY3QuYWxnby50czo1OQogICAgLy8gZmVlOiAwLAogICAgaW50Y18wIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvZmFjdG9yeV9jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjU0LTYxCiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICB4ZmVyQXNzZXQ6IGFzc2V0SWQsCiAgICAvLyAgICAgYXNzZXRSZWNlaXZlcjogVHhuLnNlbmRlciwKICAgIC8vICAgICBhc3NldEFtb3VudDogMSwKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICAvLyAgIC5zdWJtaXQoKQogICAgaXR4bl9zdWJtaXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NjMKICAgIC8vIEdsb2JhbFN0YXRlPHVpbnQ2ND4oeyBrZXk6IG5hbWUgfSkuZGVsZXRlKCkKICAgIGZyYW1lX2RpZyAtMQogICAgYXBwX2dsb2JhbF9kZWwKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6OkZhY3RvcnlDb250cmFjdC5nZXRfdG90YWxNaW50ZWQoKSAtPiB1aW50NjQ6CmdldF90b3RhbE1pbnRlZDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MjAKICAgIC8vIHB1YmxpYyB0b3RhbE1pbnRlZCA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gInRvdGFsTWludGVkIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9mYWN0b3J5X2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NjgKICAgIC8vIHJldHVybiB0aGlzLnRvdGFsTWludGVkLnZhbHVlCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 32,
            "num_uints": 32
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "creator": {
                    "type": "bytes",
                    "key": "creator"
                },
                "totalMinted": {
                    "type": "uint64",
                    "key": "totalMinted"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "FactoryContract",
        "methods": [
            {
                "name": "onCreate",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "mint_NFT",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "url"
                    },
                    {
                        "type": "byte[]",
                        "name": "metadata"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "own_NFT",
                "args": [
                    {
                        "type": "uint64",
                        "name": "assetId"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_totalMinted",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}